on:
  issues:
    types:
      - opened

jobs:
  update_network_operator_version:
    if: startsWith(github.event.issue.title, 'Release v')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN_NVIDIA_CI_CD }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine app & chart versions and base branch
        run: |
          version_with_prefix=$(echo ${{ github.event.issue.title }} | sed 's/Release //')
          echo APP_VERSION=$version_with_prefix       | tee -a $GITHUB_ENV  # example: v25.1.0-beta.1
          echo CHART_VERSION=${version_with_prefix:1} | tee -a $GITHUB_ENV  # example: 25.1.0-beta.1
          if echo $version_with_prefix | grep -q beta; then
            base_branch=master
          else
            v_major_minor=$(echo $version_with_prefix | grep -Eo '^v[0-9]+\.[0-9]+')  # example: v25.1
            base_branch=$v_major_minor.x
          fi
          echo BASE_BRANCH=$base_branch | tee -a $GITHUB_ENV
      - name: Create PR to update versions in network-operator chart
        env:
          UPDATE_BRANCH: cicd/update-network-operator-to-${{ env.APP_VERSION }}
        run: |
          git config user.name  nvidia-ci-cd
          git config user.email svc-cloud-orch-gh@nvidia.com
          git checkout -b $UPDATE_BRANCH
          yq -i '.NetworkOperator.version = "${{ env.APP_VERSION }}"'   hack/release.yaml
          yq -i              '.appVersion = "${{ env.APP_VERSION }}"'   deployment/network-operator/Chart.yaml
          yq -i                 '.version = "${{ env.CHART_VERSION }}"' deployment/network-operator/Chart.yaml
          make release-build

          if ! git diff --color --unified=0 --exit-code; then
            git add deployment/network-operator/
            git add hack/release.yaml
            git commit -sam "cicd: update Network Operator to $APP_VERSION in chart values"
            git push -u origin $UPDATE_BRANCH
            gh pr create \
              --repo ${{ github.repository_owner }}/network-operator \
              --base $BASE_BRANCH \
              --head $(git branch --show-current) \
              --title "cicd: update Network Operator to $APP_VERSION in chart values" \
              --body "Created by the *${{ github.job }}* job."
          fi

  update_sriov_operator_version:
    if: startsWith(github.event.issue.title, 'Release v')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN_NVIDIA_CI_CD }}
    steps:
      - name: Determine sriov-network-operator base branch
        run: |
          version_without_prefix=$(echo ${{ github.event.issue.title }} | sed 's/Release v//')
          major_minor=$(echo $version_without_prefix | grep -Eo '[0-9]+\.[0-9]+')  # example: 25.1
          echo BASE_BRANCH=network-operator-$major_minor.x | tee -a $GITHUB_ENV
          echo RELEASE_VERSION=$version_without_prefix     | tee -a $GITHUB_ENV  # example: 25.1.0-beta.1
      - uses: actions/checkout@v4
        with:
          # token: ${{ secrets.GH_TOKEN_NVIDIA_CI_CD }}  # TODO: see if this is required explicitly, or can be taken from env
          repository: ${{ github.repository_owner }}/sriov-network-operator
          ref: ${{ env.BASE_BRANCH }}
          path: sriov-network-operator-fork
          fetch-depth: 0
      - name: Tag sriov-network-operator to trigger PR for updating network-operator values
        run: |
          cd sriov-network-operator-fork
          git config user.name  nvidia-ci-cd
          git config user.email svc-cloud-orch-gh@nvidia.com

          git status  # TODO: verify on branch $BASE_BRANCH
          git branch  # TODO: verify on branch $BASE_BRANCH
          git checkout -b $RELEASE_VERSION # origin/$BASE_BRANCH  # TODO: see if base branch required after checkout with `ref`
          git tag network-operator-$RELEASE_VERSION
          # git push origin --tags  # TODO: uncomment once satisfied with above results
